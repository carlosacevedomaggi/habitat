name: Docker Build and Publish to GHCR

on:
  push:
    branches:
      - v2 # Triggers on pushes to the v2 branch
  workflow_dispatch: # Allows manual triggering from the Actions tab

env:
  GHCR_OWNER: carlosacevedomaggi # Still useful for tagging if needed, but login will use github.repository_owner
  BACKEND_IMAGE_NAME: habitat-backend
  FRONTEND_IMAGE_NAME: habitat-frontend
  IMAGE_TAG: latest # You can also use git SHA: ${{ github.sha }}
  # NEXT_PUBLIC_API_URL is defined per job if needed as build-arg

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest # GitHub Actions runners are typically x86_64
    permissions:
      contents: read
      packages: write # Required to push to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-platform builds, though runner is likely amd64)
        uses: docker/setup-qemu-action@v3
        # This step is good practice, though for amd64-only build on amd64 runner, it might not be strictly necessary.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # Changed to use github.repository_owner
          password: ${{ secrets.GHCR_PAT }} # PAT with write:packages scope

      - name: Build and push Backend image
        uses: docker/build-push-action@v6
        id: build-and-push-backend
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64 # Explicitly build for amd64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }} # Also use github.repository_owner for consistency in tag
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend image
        uses: docker/build-push-action@v6
        id: build-and-push-frontend
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64 # Explicitly build for amd64
          build-args: |
            NEXT_PUBLIC_API_URL=/api
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }} # Also use github.repository_owner for consistency in tag
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo "Test echo step" # Simplified for syntax testing
        # Note: To get digest output, you need to give an id to the build-push-action steps, e.g., id: build-and-push-backend